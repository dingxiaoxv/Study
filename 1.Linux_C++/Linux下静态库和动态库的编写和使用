# Linux下静态库和动态库的编写和使用

[TOC]

------

# 前言



# 1.简介

库是一种可执行代码的**二进制形式**，可以被操作系统载入内存执行。

Linux操作系统支持的函数库分为静态库和动态库，动态库又称共享库。Linux系统有几个重要的目录存放相应的函数库，如/lib /usr/lib。

## 1.1 静态库

> Linux下.a文件、windows下.lib文件。
>
> **a : archive 档案**
>
> **lib: library 库**

**静态库是在链接阶段，将汇编生成的目标文件.o与引用到的库一起打包到可执行文件中**，此种链接方式被称为静态链接。程序在运行时与函数库再无瓜葛，移植起来就很方便，但也造成了资源的浪费，会使得可执行文件变大。此外，整个静态库中的所有函数都被编译进了目标代码中，一旦对静态库进行修改，就需要对整个程序重新编译。

## 1.2 动态库

> Linux下.so文件、windows下.dll文件。
>
> **so: Shared Object 共享对象**
>
> **dll: Dynamic Link Library 动态链接库**

**动态函数库在编译的时候并没有被链接打包进目标代码中，而是在程序运行时才被载入，**可执行文件**必须依赖**到动态库才能成功运行程序。对动态链接库进行修改并不影响使用程序，所以动态函数库的升级比较方便。如果多个应用程序都要使用同一函数库，动态库就非常适合，可以减小应用程序的体积。最后，动态库可以进行跨语言调用，而静态就不行。

# 2.静态库的编写与使用



## 2.1 创建静态库